{"version":3,"sources":["webpack:///../../../src/components/VExpansionPanel/VExpansionPanels.ts","webpack:///./node_modules/core-js/modules/es.array.flat.js","webpack:///./node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","webpack:///./node_modules/@babel/runtime/helpers/esm/iterableToArray.js","webpack:///./node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","webpack:///./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","webpack:///../../../src/components/VExpansionPanel/VExpansionPanelContent.ts","webpack:///./src/views/Accordion.vue?782b","webpack:///src/views/Accordion.vue","webpack:///./src/views/Accordion.vue?13d1","webpack:///./src/views/Accordion.vue","webpack:///./node_modules/core-js/internals/flatten-into-array.js","webpack:///../../../src/components/VExpansionPanel/VExpansionPanelHeader.ts","webpack:///../../../src/components/VExpansionPanel/VExpansionPanel.ts"],"names":["name","provide","expansionPanels","this","props","accordion","disabled","flat","hover","focusable","inset","popout","readonly","tile","Boolean","computed","classes","created","$attrs","hasOwnProperty","Array","value","length","methods","updateItem","getValue","item","nextValue","index","toggleMethod","$","flattenIntoArray","toObject","toLength","toInteger","arraySpeciesCreate","target","proto","depthArg","arguments","undefined","O","sourceLen","A","_arrayWithoutHoles","arr","isArray","arrayLikeToArray","_iterableToArray","iter","Symbol","iterator","from","_nonIterableSpread","TypeError","_toConsumableArray","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","baseMixins","data","isActive","parentIsActive","expansionPanel","watch","immediate","handler","isBooted","oldVal","$nextTick","beforeDestroy","render","h","showLazyContent","staticClass","directives","class","_vm","_h","$createElement","_c","_self","on","controlAll","_v","attrs","model","callback","$$v","panel","expression","_l","i","key","scopedSlots","_u","fn","proxy","_s","staticRenderFns","items","openAll","component","VBtn","VExpansionPanel","VExpansionPanelContent","VExpansionPanelHeader","VExpansionPanels","VIcon","bind","original","source","start","depth","mapper","thisArg","element","targetIndex","sourceIndex","mapFn","module","exports","ripple","disableIconRotate","expandIcon","type","default","hideActions","hasMousedown","isDisabled","isReadonly","onClick","genIcon","icon","setBackgroundColor","tabindex","click","mousedown","mouseup","open","content","header","nextIsActive","groupClasses","registerContent","unregisterContent","registerHeader","vm","unregisterHeader","e","toggle","String"],"mappings":"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","file":"js/accordion.b981cb91.js","sourcesContent":["// Styles\nimport './VExpansionPanel.sass'\n\n// Components\nimport { BaseItemGroup, GroupableInstance } from '../VItemGroup/VItemGroup'\nimport VExpansionPanel from './VExpansionPanel'\n\n// Utilities\nimport { breaking } from '../../util/console'\n\n// Types\ninterface VExpansionPanelInstance extends InstanceType<typeof VExpansionPanel> {}\n\n/* @vue/component */\nexport default BaseItemGroup.extend({\n  name: 'v-expansion-panels',\n\n  provide (): object {\n    return {\n      expansionPanels: this,\n    }\n  },\n\n  props: {\n    accordion: Boolean,\n    disabled: Boolean,\n    flat: Boolean,\n    hover: Boolean,\n    focusable: Boolean,\n    inset: Boolean,\n    popout: Boolean,\n    readonly: Boolean,\n    tile: Boolean,\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        ...BaseItemGroup.options.computed.classes.call(this),\n        'v-expansion-panels': true,\n        'v-expansion-panels--accordion': this.accordion,\n        'v-expansion-panels--flat': this.flat,\n        'v-expansion-panels--hover': this.hover,\n        'v-expansion-panels--focusable': this.focusable,\n        'v-expansion-panels--inset': this.inset,\n        'v-expansion-panels--popout': this.popout,\n        'v-expansion-panels--tile': this.tile,\n      }\n    },\n  },\n\n  created () {\n    /* istanbul ignore next */\n    if (this.$attrs.hasOwnProperty('expand')) {\n      breaking('expand', 'multiple', this)\n    }\n\n    /* istanbul ignore next */\n    if (\n      Array.isArray(this.value) &&\n      this.value.length > 0 &&\n      typeof this.value[0] === 'boolean'\n    ) {\n      breaking(':value=\"[true, false, true]\"', ':value=\"[0, 2]\"', this)\n    }\n  },\n\n  methods: {\n    updateItem (item: GroupableInstance & VExpansionPanelInstance, index: number) {\n      const value = this.getValue(item, index)\n      const nextValue = this.getValue(item, index + 1)\n\n      item.isActive = this.toggleMethod(value)\n      item.nextIsActive = this.toggleMethod(nextValue)\n    },\n  },\n})\n","'use strict';\nvar $ = require('../internals/export');\nvar flattenIntoArray = require('../internals/flatten-into-array');\nvar toObject = require('../internals/to-object');\nvar toLength = require('../internals/to-length');\nvar toInteger = require('../internals/to-integer');\nvar arraySpeciesCreate = require('../internals/array-species-create');\n\n// `Array.prototype.flat` method\n// https://tc39.es/ecma262/#sec-array.prototype.flat\n$({ target: 'Array', proto: true }, {\n  flat: function flat(/* depthArg = 1 */) {\n    var depthArg = arguments.length ? arguments[0] : undefined;\n    var O = toObject(this);\n    var sourceLen = toLength(O.length);\n    var A = arraySpeciesCreate(O, 0);\n    A.length = flattenIntoArray(A, O, O, sourceLen, 0, depthArg === undefined ? 1 : toInteger(depthArg));\n    return A;\n  }\n});\n","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","// Components\nimport VExpansionPanel from './VExpansionPanel'\nimport { VExpandTransition } from '../transitions'\n\n// Mixins\nimport Bootable from '../../mixins/bootable'\nimport Colorable from '../../mixins/colorable'\nimport { inject as RegistrableInject } from '../../mixins/registrable'\n\n// Utilities\nimport { getSlot } from '../../util/helpers'\nimport mixins, { ExtractVue } from '../../util/mixins'\n\n// Types\nimport Vue, { VNode, VueConstructor } from 'vue'\n\nconst baseMixins = mixins(\n  Bootable,\n  Colorable,\n  RegistrableInject<'expansionPanel', VueConstructor<Vue>>('expansionPanel', 'v-expansion-panel-content', 'v-expansion-panel')\n)\n\ninterface options extends ExtractVue<typeof baseMixins> {\n  expansionPanel: InstanceType<typeof VExpansionPanel>\n}\n\n/* @vue/component */\nexport default baseMixins.extend<options>().extend({\n  name: 'v-expansion-panel-content',\n\n  data: () => ({\n    isActive: false,\n  }),\n\n  computed: {\n    parentIsActive (): boolean {\n      return this.expansionPanel.isActive\n    },\n  },\n\n  watch: {\n    parentIsActive: {\n      immediate: true,\n      handler (val, oldVal) {\n        if (val) this.isBooted = true\n\n        if (oldVal == null) this.isActive = val\n        else this.$nextTick(() => this.isActive = val)\n      },\n    },\n  },\n\n  created () {\n    this.expansionPanel.registerContent(this)\n  },\n\n  beforeDestroy () {\n    this.expansionPanel.unregisterContent()\n  },\n\n  render (h): VNode {\n    return h(VExpandTransition, this.showLazyContent(() => [\n      h('div', this.setBackgroundColor(this.color, {\n        staticClass: 'v-expansion-panel-content',\n        directives: [{\n          name: 'show',\n          value: this.isActive,\n        }],\n      }), [\n        h('div', { class: 'v-expansion-panel-content__wrap' }, getSlot(this)),\n      ]),\n    ]))\n  },\n})\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"accordion-area\"},[_c('div',{staticClass:\"btn-area\"},[_c('v-btn',{on:{\"click\":_vm.controlAll}},[(_vm.openAll)?_c('span',[_vm._v(\"모두 접기\")]):_c('span',[_vm._v(\"모두 펼치기\")])])],1),_c('v-expansion-panels',{attrs:{\"multiple\":\"\"},model:{value:(_vm.panel),callback:function ($$v) {_vm.panel=$$v},expression:\"panel\"}},_vm._l((_vm.items),function(item,i){return _c('v-expansion-panel',{key:i},[_c('v-expansion-panel-header',{scopedSlots:_vm._u([{key:\"actions\",fn:function(){return [_c('v-icon',{attrs:{\"color\":\"primary\"}},[_vm._v(\" $expand \")])]},proxy:true}],null,true)},[_vm._v(\"Header \"+_vm._s(item)+\" \")]),_c('v-expansion-panel-content',[_vm._v(\" Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. \")])],1)}),1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div class=\"accordion-area\">\n    <div class=\"btn-area\">\n      <!-- <v-btn @click=\"all\">\n        모두펼치기\n      </v-btn>\n      <v-btn @click=\"none\">\n        모두접기\n      </v-btn> -->\n      <v-btn @click=\"controlAll\">\n        <span v-if=\"openAll\">모두 접기</span>\n        <span v-else>모두 펼치기</span>\n      </v-btn>\n    </div>\n    <v-expansion-panels\n      v-model=\"panel\"\n      multiple\n    >\n      <v-expansion-panel\n        v-for=\"(item,i) in items\"\n        :key=\"i\"\n      >\n        <v-expansion-panel-header>Header {{ item }}\n          <template v-slot:actions>\n            <v-icon color=\"primary\">\n              $expand\n            </v-icon>\n          </template>\n        </v-expansion-panel-header>\n        <v-expansion-panel-content>\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\n        </v-expansion-panel-content>\n      </v-expansion-panel>\n    </v-expansion-panels>\n  </div>\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      panel: [],\n      items: 5,\n      openAll: false\n    }\n  },\n  methods: {\n    controlAll () {\n      this.openAll = !this.openAll\n      if (this.openAll) {\n        this.panel = [...Array(this.items).keys()].map((k, i) => i) // all true\n      } else {\n        this.panel = [...Array(this.items).keys()].map(() => false) // all false\n      }\n      // 어떤 배열이 있을 때, 배열을 탐색(순회)하면서 요소들을 각각 가공해서 새로운 배열(원래 배열과 길이가 동일한)을 반환받고자 할 때 map을 사용\n    }\n  }\n}\n</script>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Accordion.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Accordion.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Accordion.vue?vue&type=template&id=062f672a&\"\nimport script from \"./Accordion.vue?vue&type=script&lang=js&\"\nexport * from \"./Accordion.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VBtn } from 'vuetify/lib/components/VBtn';\nimport { VExpansionPanel } from 'vuetify/lib/components/VExpansionPanel';\nimport { VExpansionPanelContent } from 'vuetify/lib/components/VExpansionPanel';\nimport { VExpansionPanelHeader } from 'vuetify/lib/components/VExpansionPanel';\nimport { VExpansionPanels } from 'vuetify/lib/components/VExpansionPanel';\nimport { VIcon } from 'vuetify/lib/components/VIcon';\ninstallComponents(component, {VBtn,VExpansionPanel,VExpansionPanelContent,VExpansionPanelHeader,VExpansionPanels,VIcon})\n","'use strict';\nvar isArray = require('../internals/is-array');\nvar toLength = require('../internals/to-length');\nvar bind = require('../internals/function-bind-context');\n\n// `FlattenIntoArray` abstract operation\n// https://tc39.github.io/proposal-flatMap/#sec-FlattenIntoArray\nvar flattenIntoArray = function (target, original, source, sourceLen, start, depth, mapper, thisArg) {\n  var targetIndex = start;\n  var sourceIndex = 0;\n  var mapFn = mapper ? bind(mapper, thisArg, 3) : false;\n  var element;\n\n  while (sourceIndex < sourceLen) {\n    if (sourceIndex in source) {\n      element = mapFn ? mapFn(source[sourceIndex], sourceIndex, original) : source[sourceIndex];\n\n      if (depth > 0 && isArray(element)) {\n        targetIndex = flattenIntoArray(target, original, element, toLength(element.length), targetIndex, depth - 1) - 1;\n      } else {\n        if (targetIndex >= 0x1FFFFFFFFFFFFF) throw TypeError('Exceed the acceptable array length');\n        target[targetIndex] = element;\n      }\n\n      targetIndex++;\n    }\n    sourceIndex++;\n  }\n  return targetIndex;\n};\n\nmodule.exports = flattenIntoArray;\n","// Components\nimport { VFadeTransition } from '../transitions'\nimport VExpansionPanel from './VExpansionPanel'\nimport VIcon from '../VIcon'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\nimport { inject as RegistrableInject } from '../../mixins/registrable'\n\n// Directives\nimport ripple from '../../directives/ripple'\n\n// Utilities\nimport { getSlot } from '../../util/helpers'\nimport mixins, { ExtractVue } from '../../util/mixins'\n\n// Types\nimport Vue, { VNode, VueConstructor } from 'vue'\n\nconst baseMixins = mixins(\n  Colorable,\n  RegistrableInject<'expansionPanel', VueConstructor<Vue>>('expansionPanel', 'v-expansion-panel-header', 'v-expansion-panel')\n)\n\ninterface options extends ExtractVue<typeof baseMixins> {\n  $el: HTMLElement\n  expansionPanel: InstanceType<typeof VExpansionPanel>\n}\n\nexport default baseMixins.extend<options>().extend({\n  name: 'v-expansion-panel-header',\n\n  directives: { ripple },\n\n  props: {\n    disableIconRotate: Boolean,\n    expandIcon: {\n      type: String,\n      default: '$expand',\n    },\n    hideActions: Boolean,\n    ripple: {\n      type: [Boolean, Object],\n      default: false,\n    },\n  },\n\n  data: () => ({\n    hasMousedown: false,\n  }),\n\n  computed: {\n    classes (): object {\n      return {\n        'v-expansion-panel-header--active': this.isActive,\n        'v-expansion-panel-header--mousedown': this.hasMousedown,\n      }\n    },\n    isActive (): boolean {\n      return this.expansionPanel.isActive\n    },\n    isDisabled (): boolean {\n      return this.expansionPanel.isDisabled\n    },\n    isReadonly (): boolean {\n      return this.expansionPanel.isReadonly\n    },\n  },\n\n  created () {\n    this.expansionPanel.registerHeader(this)\n  },\n\n  beforeDestroy () {\n    this.expansionPanel.unregisterHeader()\n  },\n\n  methods: {\n    onClick (e: MouseEvent) {\n      this.$emit('click', e)\n    },\n    genIcon () {\n      const icon = getSlot(this, 'actions') ||\n        [this.$createElement(VIcon, this.expandIcon)]\n\n      return this.$createElement(VFadeTransition, [\n        this.$createElement('div', {\n          staticClass: 'v-expansion-panel-header__icon',\n          class: {\n            'v-expansion-panel-header__icon--disable-rotate': this.disableIconRotate,\n          },\n          directives: [{\n            name: 'show',\n            value: !this.isDisabled,\n          }],\n        }, icon),\n      ])\n    },\n  },\n\n  render (h): VNode {\n    return h('button', this.setBackgroundColor(this.color, {\n      staticClass: 'v-expansion-panel-header',\n      class: this.classes,\n      attrs: {\n        tabindex: this.isDisabled ? -1 : null,\n        type: 'button',\n        'aria-expanded': this.isActive,\n      },\n      directives: [{\n        name: 'ripple',\n        value: this.ripple,\n      }],\n      on: {\n        ...this.$listeners,\n        click: this.onClick,\n        mousedown: () => (this.hasMousedown = true),\n        mouseup: () => (this.hasMousedown = false),\n      },\n    }), [\n      getSlot(this, 'default', { open: this.isActive }, true),\n      this.hideActions || this.genIcon(),\n    ])\n  },\n})\n","// Components\nimport VExpansionPanels from './VExpansionPanels'\nimport VExpansionPanelHeader from './VExpansionPanelHeader'\nimport VExpansionPanelContent from './VExpansionPanelContent'\n\n// Mixins\nimport { factory as GroupableFactory } from '../../mixins/groupable'\nimport { provide as RegistrableProvide } from '../../mixins/registrable'\n\n// Utilities\nimport { getSlot } from '../../util/helpers'\nimport mixins from '../../util/mixins'\n\n// Types\nimport { VNode } from 'vue'\n\ntype VExpansionPanelHeaderInstance = InstanceType<typeof VExpansionPanelHeader>\ntype VExpansionPanelContentInstance = InstanceType<typeof VExpansionPanelContent>\n\nexport default mixins(\n  GroupableFactory<'expansionPanels', typeof VExpansionPanels>('expansionPanels', 'v-expansion-panel', 'v-expansion-panels'),\n  RegistrableProvide('expansionPanel', true)\n  /* @vue/component */\n).extend({\n  name: 'v-expansion-panel',\n\n  props: {\n    disabled: Boolean,\n    readonly: Boolean,\n  },\n\n  data () {\n    return {\n      content: null as VExpansionPanelContentInstance | null,\n      header: null as VExpansionPanelHeaderInstance | null,\n      nextIsActive: false,\n    }\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        'v-expansion-panel--active': this.isActive,\n        'v-expansion-panel--next-active': this.nextIsActive,\n        'v-expansion-panel--disabled': this.isDisabled,\n        ...this.groupClasses,\n      }\n    },\n    isDisabled (): boolean {\n      return this.expansionPanels.disabled || this.disabled\n    },\n    isReadonly (): boolean {\n      return this.expansionPanels.readonly || this.readonly\n    },\n  },\n\n  methods: {\n    registerContent (vm: VExpansionPanelContentInstance) {\n      this.content = vm\n    },\n    unregisterContent () {\n      this.content = null\n    },\n    registerHeader (vm: VExpansionPanelHeaderInstance) {\n      this.header = vm\n      vm.$on('click', this.onClick)\n    },\n    unregisterHeader () {\n      this.header = null\n    },\n    onClick (e: MouseEvent) {\n      if (e.detail) this.header!.$el.blur()\n\n      this.$emit('click', e)\n\n      this.isReadonly || this.isDisabled || this.toggle()\n    },\n    toggle () {\n      this.$nextTick(() => this.$emit('change'))\n    },\n  },\n\n  render (h): VNode {\n    return h('div', {\n      staticClass: 'v-expansion-panel',\n      class: this.classes,\n      attrs: {\n        'aria-expanded': String(this.isActive),\n      },\n    }, getSlot(this))\n  },\n})\n"],"sourceRoot":""}